#!/bin/bash

# Copyright (c) 2011 Mick Thomure
# All rights reserved.
#
# Please see the file COPYING in this distribution for usage
# terms.

#
# Transforms a set of images, optionally running an SVM over the results.
# Reads: prototypes from RESULT_DIR/s2.protos
# Writes: feature vectors to RESULT_DIR/data
#

: ${NUM_PROCS:=4}
: ${GLIMPSE_MODEL:=default}

while getopts "n:t:" F; do
  case $F in
    "n" )
      NUM_PROCS=$OPTARG
      ;;
    "t" )
      TRANSFORM_ARGS=$OPTARG
      ;;
  esac
done

# Strip off optional arguments
shift $((OPTIND-1))

if [[ "$#" -lt 2 ]]; then
  echo "usage: $0 [options] CORPUS-DIR RESULT-DIR" 1>&2
  echo "options:" 1>&2
  echo "  -n NUM   Set number of concurrent worker processes (default is $NUM_PROCS)." 1>&2
  echo "  -t ARGS  Set arguments for transform command." 1>&2
  exit -1
fi

D=$(dirname $0)
CORPUS_DIR=$1
RESULT_DIR=$2

PROTOTYPE_FILE=$RESULT_DIR/s2.protos

if [[ ! -d $CORPUS_DIR ]]; then
  echo "CORPUS-DIR ($CORPUS_DIR) not found" 1>&2
  exit -1
fi
if [[ ! -d $RESULT_DIR ]]; then
  echo "RESULT-DIR ($RESULT_DIR) must exist" 1>&2
  exit -1
fi
#if [[ ! -f "$PROTOTYPE_FILE" ]]; then
#  echo "Prototype file ($PROTOTYPE_FILE) not found!"
#  exit -1
#fi

# List of image classes found in the corpus
CLS_LIST=$(for F in $CORPUS_DIR/*; do echo $(basename $F); done)
cat <<< $CLS_LIST > $RESULT_DIR/classes

# Generate image names in form CLASS/IMAGE
for CLS in $CLS_LIST; do
  for F in $CORPUS_DIR/$CLS/*; do
    echo $CLS/$(basename $F);
  done > $RESULT_DIR/$CLS.files
done
CLS1=$(cut -d' ' -f 1 <<< $CLS_LIST)

# Transform the training and testing sets
DATA_DIR=$RESULT_DIR/data
#~ echo "+ Building data directories under $DATA_DIR"
mkdir $DATA_DIR || exit -1          # Build data/
for CLS in $CLS_LIST; do
  mkdir $DATA_DIR/$CLS || exit -1   # Build data/{pos,neg}
  for F in $(cat $RESULT_DIR/$CLS.files); do
    mkdir $DATA_DIR/$F || exit -1   # Build data/{pos,neg}/*.jpg
  done
done

if [[ -f "$PROTOTYPE_FILE" ]]; then
  echo -n "NUM_PROTOTYPES: "
  $D/codex -i p -o s -c 'len(o)' $PROTOTYPE_FILE || exit -1
  TRANSFORM_ARGS="-p $PROTOTYPE_FILE $TRANSFORM_ARGS"
fi

for CLS in $CLS_LIST; do
  cat $RESULT_DIR/$CLS.files
done | xargs -P $NUM_PROCS -I {} $D/glimpse -m $GLIMPSE_MODEL transform -r $DATA_DIR/{} $TRANSFORM_ARGS $CORPUS_DIR/{}
