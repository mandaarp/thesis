#!/usr/bin/env python

# Copyright (c) 2011 Mick Thomure
# All rights reserved.
#
# Please see the file COPYING in this distribution for usage
# terms.

#
# Concatenate multiple sets of numpy-formatted serialized data, where set
# elements all have equal shape.
#

import numpy
import sys
from glimpse import util

def main():
  opts, args = util.GetOptions('ls')
  if len(args) < 1:
    args = [ "-" ]
  for i in range(len(args)):
    if args[i] == "-":
      args[i] = sys.stdin
  as_list = False
  stream = False
  for opt,arg in opts:
    if opt == '-l':
      as_list = True
    elif opt == '-s':
      stream = True
  if stream:
    # Each file contains stream of records
    list_of_record_lists = [ list(util.LoadAll((f,))) for f in args ]
  else:
    # Each file contains single 2D array
    list_of_record_lists = map(util.Load, args)
  if as_list:
    array = list_of_record_lists
  else:
    try:
      array = numpy.vstack(list_of_record_lists)
    except ValueError:
      try:
        array = numpy.concatenate(list_of_record_lists)
      except ValueError:
        assert False, "Unable to concatenate arrays"
  util.Store(array, sys.stdout)

if __name__ == '__main__':
  try:
    main()
  except util.UsageException, e:
    if e.msg:
      print >>sys.stderr, e.msg
    util.Usage(
      "[options] IN1.dat IN2.dat [...] > OUT.dat\n"
      "options:\n"
      "  -l     Join arrays with a list, not an array\n"
      "  -s     Treat each file as an object stream"
    )

