#!/bin/bash

set -e

if [[ "$#" < 1 ]]; then
  echo "usage: $0 START|KILL|STATUS [RUN-NUM]" 1>&2
  exit -1
fi

CMD=$1
NUM=1
#NUM_PROCS=2  # number of processes to run per worker
NUM_PROCS=  # number of processes to run per worker
if [[ "$#" > 1 ]]; then
  NUM=$2
fi
if [[ "$#" > 2 ]]; then
  NUM_PROCS=$3
fi
GLIMPSE_HOME=$(dirname $0)/..
HOST=$(hostname -f)

cd $GLIMPSE_HOME
JOBDIR=run/glimpse-cluster/${HOST}/workers
mkdir -p $JOBDIR

if [[ "$BASHPID" == "" ]]; then
  # Workaround for old versions of bash
  BASHPID=$$
fi

function Run {
  # Log the process ID of the script.
  echo $$ > $JOBDIR/$NUM.pid
  # Log the process group ID if possible.
  if [[ -d /proc ]]; then
    # Get current script's PGID
    echo $(ps -p $BASHPID h -o pgid) > $JOBDIR/$NUM.pgid
    # Kill the command with
    #   pkill -g $(cat $JOBDIR/$NUM.pgid)
    # Note: this does not work on OSX.
  fi

  # Decrease our priority.
  renice 10 $$

  # Run the worker, relaunching if it dies with an error.
  if [[ "$VERBOSE" != "" ]]; then
    VERBOSE="-v"
  fi
  CMD="bin/glimpse-cluster $VERBOSE LaunchWorker $NUM_PROCS"
  until $CMD; do
    echo "GLIMPSE-CLUSTER-WRAPPER: 'glimpse-cluster' exited with status $?, restarting.." 1>&2
    sleep 1
  done 1>$JOBDIR/$NUM.log 2>$JOBDIR/$NUM.err
}

function Kill {
  pkill -g $(cat $JOBDIR/$NUM.pgid)
}

function Status {
  if [ -f $JOBDIR/$NUM.pid ]; then
    PID=$(cat $JOBDIR/$NUM.pid)
    T=$(ps --pid $PID | wc -l)
    if [[ "$T" == 2 ]]; then
      echo "RUNNING"
      exit 0
    fi
  fi
  echo "NOT-RUNNING"
  exit 0
}

if [[ "$CMD" == "START-INNER" ]]; then
  Run
elif [[ "$CMD" == "START" ]]; then
  $BASH_SOURCE START-INNER $NUM $NUM_PROCS 1>$JOBDIR/$NUM-launcher.log 2>$JOBDIR/$NUM-launcher.err &
elif [[ "$CMD" == "KILL" ]]; then
  Kill
elif [[ "$CMD" == "STATUS" ]]; then
  Status
else
  echo "Unknown command: $CMD" 1>&2
  exit -1
fi
