#!/bin/bash

# Copyright (c) 2011 Mick Thomure
# All rights reserved.
#
# Please see the file COPYING in this distribution for usage
# terms.

#
# Run SVM on transformed images with existing split information. Reads from the
# environment variable SVM_ARGS.
#

set -e

if [[ "$#" -lt 1 ]]; then
  echo "usage: $0 JOB-DIR" 1>&2
  exit -1
fi

D=$(dirname $0)
RESULT_DIR=$1

SVM_DIR=$RESULT_DIR/svm-for-splits
mkdir $SVM_DIR

CLS_LIST=( $(cat $RESULT_DIR/classes) )
NUM_CLS=${#CLS_LIST[@]}
if [[ "$NUM_CLS" != 2 ]]; then
  echo "Expected two image classes" 1>&2
  exit -1
fi
read CLS1 CLS2 <<< ${CLS_LIST[@]}
for F in {train,test}-{$CLS1,$CLS2}; do
  FILES=$(for G in $(cat $RESULT_DIR/splits/$F.files); do echo $RESULT_DIR/data/$G/feature-vector; done)
  $D/np-concat $FILES > $SVM_DIR/$F.features
done
RESULT=$($D/svm $SVM_ARGS $SVM_DIR/{train,test}-{$CLS1,$CLS2}.features $SVM_DIR | tee $SVM_DIR.log)
read TRAIN_ACCURACY TEST_ACCURACY TRAIN_AUC TEST_AUC TRAIN_DPRIME TEST_DPRIME REST <<< $RESULT
for F in {TRAIN,TEST}_{ACCURACY,AUC,DPRIME}; do
  eval G=\$$F
  echo "SVM_$F: $G"
done

