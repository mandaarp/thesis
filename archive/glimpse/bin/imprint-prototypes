#!/usr/bin/python

# Copyright (c) 2011 Mick Thomure
# All rights reserved.
#
# Please see the file COPYING in this distribution for usage
# terms.

#
# Imprint S2 prototypes from specific regions of C1 activity, computed from a
# given image file.
#

from glimpse import core
from glimpse import util
import numpy
import random
import sys

def main():
  opts, args = util.GetOptions("i:o:p:")
  img_fname = None
  proto_fname = None
  options = None
  for opt,arg in opts:
    if opt == '-i':
      img_fname = arg
    elif opt == '-o':
      options = core.LoadOptions(arg)
    elif opt == '-p':
      proto_fname = arg
  if not img_fname:
    raise util.UsageException("Missing input image path")
  if not proto_fname:
    raise util.UsageException("Missing output S2 prototype path")
  if len(args) % 3 != 0 or len(args) < 3:
    raise util.UsageException("Expected non-empty, list of 3-tuple coordinates")
  options = core.ExpandOptions(options)
  core.ApplyGlobalOptions(options)
  coords = util.TakeTriples(map(int, args))
  protos = core.ImprintS2Prototypes(img_fname, coords, options)
  util.Store(protos, proto_fname)

if __name__ == '__main__':
  try:
    main()
  except util.UsageException, e:
    if e.msg:
      print >>sys.stderr, e.msg
    util.Usage("[options] S1 Y1 X1 ...\n"
      "    -i     Path to input image\n"
      "    -o     Path to options file\n"
      "    -p     Path to output S2 prototypes\n"
      "where S1, Y1, and X1 give the scale, Y-coordinate, and X-coordinate in\n"
      "S2 space for the imprinted prototype."
    )

